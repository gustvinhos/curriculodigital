from pathlib import Path

import streamlit as st
from PIL import Image
from streamlit_option_menu import option_menu
from resumo import Resumo
import webbrowser



# --- PATH SETTINGS ---
current_dir = Path(__file__).parent if "__file__" in locals() else Path.cwd()
css_file = current_dir / "styles" / "main.css"
resume_file = current_dir / "assets" / "CV.pdf"
profile_pic = current_dir / "assets" / "profile-pic.png"


# --- GENERAL SETTINGS ---
PAGE_TITLE = "Digital CV | Thiago Reis"
PAGE_ICON = ":wave:"
NAME = "Thiago Reis"
DESCRIPTION = """
Analista de BI | Analista de Dados | Ci√™ncia de Dados 
"""
GRADUATIONS = """
‚ñ∫ ***Bacharel em Engenharia de Software*** ‚úÖ
‚ñ∫ ***P√≥s-graduando em Data Science*** 70%‚åõ
"""


EMAIL = "thiagoreis181310@gmail.com"

PROJECTS = {
    "üèÜ Constru√ß√£o",

}


st.set_page_config(page_title=PAGE_TITLE, page_icon=PAGE_ICON)





# --- LOAD CSS, PDF & PROFIL PIC ---
with open(css_file) as f:
    st.markdown("<style>{}</style>".format(f.read()), unsafe_allow_html=True)
with open(resume_file, "rb") as pdf_file:
    PDFbyte = pdf_file.read()
    profile_pic = Image.open(profile_pic)


# --- HERO SECTION ---
col1, col2 = st.columns(2)
with col1:
    st.image(profile_pic, width=230)

with col2:
    st.title(NAME)
    st.write(DESCRIPTION)
    st.write(GRADUATIONS)
    col11, col21 = st.columns(2)
    with col11:
        st.download_button(
            label=" üìÑ Download CV",
            data=PDFbyte,
            file_name=resume_file.name,
            mime="application/octet-stream",
        )
    with col21:
        def open_linkedin():
            linkedin_url = "https://www.linkedin.com/in/thiagoreisaraujo/"
           
            st.markdown(f'<a href="{linkedin_url}" target="_blank">Acesse meu LinkedIn</a>')
        
        # Crie a interface do usu√°rio com o bot√£o
        if st.button("Linkedin"):
            open_linkedin()

    st.write("üì´", EMAIL)


    
menu = option_menu(None, ["Resumo", "Experi√™ncias", "Certifica√ß√µes",  "Projetos", "Outras Realiza√ß√µes"], 
    icons=['file-earmark-person','person-workspace', 'patch-check', "database", "award"], 
    menu_icon="cast", default_index=0, orientation="horizontal",
    styles = {
        "container": {
            "background-color": "rgba(0, 0, 0, 0)",  # Cor de fundo escura
            "padding": "20px",  # Mais espa√ßo interno
            "border-radius": "10px",  # Cantos arredondados
        
        },
        "icon": {
            "color": "white",  # √çcones em branco
            "font-size": "20px",  # Tamanho ligeiramente maior
        },
        "nav-link": {
            "font-size": "18px",  # Tamanho da fonte menor
            "text-align": "center",  # Centralize o texto
            "margin": "0 20px",  # Espa√ßamento horizontal
            "color": "lightgray",  # Cor do texto mais clara
            "transition": "color 0.3s",  # Transi√ß√£o de cor suave
            "font-weight": "normal",
        },
        "nav-link-selected": {
            "background-color": "#d1566a",
            "color": "white",  # Cor do texto branco
        },
        "nav-link:hover": {
            "color": "orange",  # Cor do texto laranja ao passar o mouse
        },
    }

)


if menu == "Resumo":
    # Criar uma inst√¢ncia da classe Resumo
    resumo_instance = Resumo()

    col1, col2, col3, col4 = st.columns(4)
    with st.container():
        with col1:
            # Criar um gr√°fico de barras
            resumo_instance.big_number_work()

        with col2:
            # Criar um gr√°fico de barras
            resumo_instance.big_number_companies()

        with col3:
            # Criar um gr√°fico de barras
            resumo_instance.big_number_courses()    

        with col4:
            # Criar um gr√°fico de barras
            resumo_instance.big_number_institu()

    col1, col2 = st.columns(2)
    with st.container():
        with col1:
            resumo_instance.bar_chart_areacourses()
            
            

        with col2:
            resumo_instance.bar_chart_areatools()
            
      

    
    
    


if menu == "Experi√™ncias":
    with st.expander("üçû **Analista de BI | Wickbold | 09/2023 - Hoje**"):
        st.subheader("Resumo da experi√™ncia")
        st.write    (
            """
        - ‚ñ∫ Usei Power BI para construir dashboards para toda a empresa, permitindo que os usu√°rios finais visualizassem e interagissem com os dados.
        - ‚ñ∫ SQL para extrair dados de bancos de dados relacionais, consultar dados, mapear relacionamentos e criar views.
        - ‚ñ∫ Python para automatizar tarefas repetitivas, extrair dados de APIs e sites.
             - ‚ñ∫ Utilizado bibliotecas como Pandas, Numpy, StreamLit, Requests, Selenium, Pyautogui.


        """
        )
        
    
    with st.expander("üçû **Analista de Dados - Trade Marketing | Wickbold | 08/2021 - 09/2023**"):
        st.subheader("Resumo da experi√™ncia")
        st.write(
            """
            - ‚ñ∫ Utilizei Power BI para a constru√ß√£o de dashboards em toda a empresa, proporcionando aos usu√°rios finais a capacidade de visualizar e interagir com os dados.
            - ‚ñ∫ Automatizei tarefas utilizando Python, desenvolvendo scripts para lidar com tarefas repetitivas e para a extra√ß√£o de dados de APIs.
                - ‚ñ∫ Utilizei bibliotecas como Pandas, Numpy, StreamLit, Requests, Selenium e Pyautogui.
            - ‚ñ∫ Utilizado o Excel para a cria√ß√£o de relat√≥rios complementares e an√°lises de dados.
            - ‚ñ∫ Desenvolvi relat√≥rios de an√°lise de mercado, incluindo informa√ß√µes sobre distribui√ß√£o, giro, volume, faturamento, consumo e market share.
            - ‚ñ∫ Realizei a extra√ß√£o e tratamento de dados de vendas (sell in e sell out) e informa√ß√µes de mercado, utilizando ferramentas como Nielsen, Scanntech, Mercanet e Involves Stage.
            - ‚ñ∫ Apoiei o desenvolvimento de planos estrat√©gicos de categorias, considerando dados de mercado e o comportamento do shopper.
            - ‚ñ∫ Prestei suporte no planejamento dos Planos Trimestrais e no processo S&OP (Sales and Operations Planning).
            - ‚ñ∫ Participei do desenvolvimento do Guia de Execu√ß√£o, colaborando com as equipes de Trade Canal, Merchandising e Comercial para atender √†s necessidades de diferentes tipos de canais de venda e regi√µes em n√≠vel nacional.
            - ‚ñ∫ Contribu√≠ para a entrega do Selling Story adaptado para Marca, Categoria e Projetos de Trade Marketing On Premise.
            """
        )

        st.subheader("Principais realiza√ß√µes")
        st.write(
            """
            - ‚ñ∫ Desenvolvi o "Loja Perfeita" √© a descri√ß√£o do cen√°rio ideal de execu√ß√£o de uma loja, com base em dados de mercado e comportamento do shopper, prevendo um aumento de mais de 20% nas vendas.
            - ‚ñ∫ Criei um Dashboard Geral para o Comercial com informa√ß√µes macros de mercado mostrando o desempenho da empresa em rela√ß√£o aos concorrentes e conectando os dados internos de venda para mostrar o desempenho de cada canal e equipes de venda.
            - ‚ñ∫ Criei um sistema de monitoramento de displays, permitindo que a equipe de merchandising acompanhasse a execu√ß√£o de displays e monitorasse cada um, evitando perdas.
            - ‚ñ∫ Realizei alguns treinamentos para a equipe de vendas, ensinando-os a utilizar o Power BI e a interpretar os dados de mercado.
            - ‚ñ∫ Criei um sistema de SAC, que permitiu que a equipe de vendas e marketing acompanhasse os problemas dos produtos antes de chegar ao consumidor e tomasse medidas para resolv√™-las.
            """
        )



    with st.expander("‚òï **Assistente de Intelig√™ncia de Mercado | Rancheiro | 08/2017 - 08/2021**"):
        st.subheader("Resumo da experi√™ncia")
        st.write(
            """
            - ‚ñ∫ Utilizei o Excel para a constru√ß√£o de dashboards em toda a empresa, proporcionando aos usu√°rios finais a capacidade de visualizar e interagir com os dados.
            - ‚ñ∫ Criei relat√≥rios de pre√ßo, share, margem, markup, ruptura que foram utilizados pela equipe de vendas para a tomada de decis√£o.
            - ‚ñ∫ Fazia a gest√£o de promotores de venda atrav√©s de relat√≥rios de produtividade e efici√™ncia.
            - ‚ñ∫ Fiz parte de um projeto de intelig√™ncia artificial que utilizava reconhecimento por imagem para identificar rupturas, desvios de pre√ßo entre outros.

"""
        )

        st.subheader("Principais realiza√ß√µes")
        st.write(
            """
            - ‚ñ∫ Criei um sistema de monitoramento de ruptura, que permitiu que a equipe de vendas acompanhasse a execu√ß√£o de displays e monitorasse cada um, evitando perdas.
            - ‚ñ∫ Realizei alguns treinamentos para a equipe de vendas e promotores, ensinando-os a ler e interpretar os dados de mercado.
            - ‚ñ∫ Criado um sistema de pontua√ß√£o para as lojas que permitiu a equipe de vendas identificar as lojas que precisavam de mais aten√ß√£o e onde deveriam focar seus esfor√ßos.
            - ‚ñ∫ Criei um sistema de SAC, que permitiu que a equipe de vendas e marketing acompanhasse os problemas dos produtos antes de chegar ao consumidor e tomasse medidas para resolv√™-las.
            """
        )





        


elif menu == "Certifica√ß√µes":
    st.subheader("üöß, Em constru√ß√£o")

elif menu == "Projetos":
    st.subheader("üöß, Em constru√ß√£o")
    
elif menu == "Outras Realiza√ß√µes":
     st.subheader("üöß, Em constru√ß√£o")



